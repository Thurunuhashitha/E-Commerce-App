{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from '../lib/axios.js'; // ✅ ESM requires file extension\n\nimport { toast } from \"react-hot-toast\";\nexport const useUserStore = create((set, get) => ({\n  user: null,\n  loading: false,\n  checkingAuth: true,\n  signup: async ({\n    name,\n    email,\n    password,\n    confirmPassword\n  }) => {\n    set({\n      loading: true\n    });\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      set({\n        loading: false\n      });\n      return;\n    }\n    try {\n      const res = await axios.post(\"/auth/signup\", {\n        name,\n        email,\n        password\n      });\n      set({\n        user: res.data.user,\n        loading: false\n      });\n      toast.success(\"Account created successfully\");\n    } catch (error) {\n      set({\n        loading: false\n      });\n      toast.error(error.response.data.message || \"An error occurred\");\n    }\n  },\n  login: async (email, password) => {\n    set({\n      loading: true\n    });\n    try {\n      const res = await axios.post(\"/auth/login\", {\n        email,\n        password\n      });\n      set({\n        user: res.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        loading: false\n      });\n      toast.error(error.response.data.message || \"An error occurred\");\n    }\n  },\n  logout: async () => {\n    try {\n      await axios.post(\"/auth/logout\");\n      set({\n        user: null\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred during logout\");\n    }\n  },\n  checkAuth: async () => {\n    set({\n      checkingAuth: true\n    });\n    try {\n      const response = await axios.get(\"/auth/profile\");\n      set({\n        user: response.data,\n        checkingAuth: false\n      });\n    } catch (error) {\n      console.log(error.message);\n      set({\n        checkingAuth: false,\n        user: null\n      });\n    }\n  },\n  refreshToken: async () => {\n    // Prevent multiiple simultaneous refresh attempts\n    if (get().checkingAuth) return;\n    set({\n      chekingAuth: true\n    });\n    try {\n      const response = await axios.post(\"/auth/refresh-token\");\n      set({\n        checkingAuth: false\n      });\n      return response.data;\n    } catch (error) {\n      set({\n        user: null,\n        checkingAuth: false\n      });\n      throw error;\n    }\n  }\n}));\n\n//axios interceptor for token refresh\nlet refreshPromise = null;\naxios.interceptors.response.use(response => response, async error => {\n  var _error$response2;\n  const originalRequest = error.config;\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // if a refresh is already in progress, wait for it to complete\n      if (!refreshPromise) {\n        await refreshPromise;\n        return axios(originalRequest);\n      }\n\n      // start a new refresh process.\n      refreshPromise = useUserStore.getState().refreshToken();\n      await refreshPromise;\n      refreshPromise = null;\n      return axios(originalRequest);\n    } catch (error) {\n      // If refresh fails, redirect to login or handle as needed\n      useUserStore.getState().logout();\n      return Promise.reject(error);\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["create","axios","toast","useUserStore","set","get","user","loading","checkingAuth","signup","name","email","password","confirmPassword","error","res","post","data","success","response","message","login","logout","_error$response","_error$response$data","checkAuth","console","log","refreshToken","chekingAuth","refreshPromise","interceptors","use","_error$response2","originalRequest","config","status","_retry","getState","Promise","reject"],"sources":["C:/Users/hasit/OneDrive/Desktop/PHEEEW--E-Commerce-App-main/frontend/src/stores/useUserStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from '../lib/axios.js'; // ✅ ESM requires file extension\n\nimport { toast } from \"react-hot-toast\";\n\nexport const useUserStore = create((set , get) => ({\n    user: null,\n    loading: false,\n    checkingAuth: true,\n    \n    signup: async ({ name, email, password, confirmPassword }) => {\n        set({ loading: true });\n        if (password !== confirmPassword) {\n            toast.error(\"Passwords do not match\");\n            set({ loading: false });\n            return;\n        }\n        try {\n            const res = await axios.post(\"/auth/signup\", { name, email, password });\n            set({ user: res.data.user, loading: false });\n            toast.success(\"Account created successfully\");\n        } catch (error) {\n            set({ loading: false });\n            toast.error(error.response.data.message || \"An error occurred\");\n        }\n        \n        \n    },\n    \n    login: async (email, password) => {\n\t\tset({ loading: true });\n\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/auth/login\", { email, password });\n\n\t\t\tset({ user: res.data, loading: false });\n\t\t} catch (error) {\n\t\t\tset({ loading: false });\n\t\t\ttoast.error(error.response.data.message || \"An error occurred\");\n\t\t}\n    },\n    \n    logout: async () => {\n\t\ttry {\n\t\t\tawait axios.post(\"/auth/logout\");\n\t\t\tset({ user: null });\n\t\t} catch (error) {\n\t\t\ttoast.error(error.response?.data?.message || \"An error occurred during logout\");\n\t\t}\n\t},\n    \n    checkAuth: async () => {\n        set({ checkingAuth: true });\n        try {\n            const response = await axios.get(\"/auth/profile\");\n            set({ user: response.data, checkingAuth: false });\n        } catch (error) {\n            console.log(error.message);\n            set({ checkingAuth: false, user: null });\n        }\n    },\n    \n    refreshToken: async () => { \n        // Prevent multiiple simultaneous refresh attempts\n        if (get().checkingAuth) return;\n        \n        set({ chekingAuth: true });\n        try {\n            const response = await axios.post(\"/auth/refresh-token\");\n            set({ checkingAuth: false });\n            return response.data;\n        } catch (error) {\n            set({ user: null, checkingAuth: false });\n            throw error;\n        }\n    }\n    \n}))\n\n//axios interceptor for token refresh\nlet refreshPromise = null;\n\naxios.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n            try {\n                // if a refresh is already in progress, wait for it to complete\n                if (!refreshPromise) {\n                    await refreshPromise;\n                    return axios(originalRequest);\n                }\n                \n                // start a new refresh process.\n                refreshPromise = useUserStore.getState().refreshToken();\n                await refreshPromise;\n                refreshPromise = null;\n                \n                return axios(originalRequest);\n            } catch (error) {\n                \n                // If refresh fails, redirect to login or handle as needed\n                useUserStore.getState().logout();\n                return Promise.reject(error);\n            }\n        }\n        return Promise.reject(error);\n    }\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}