{"ast":null,"code":"import { create } from \"zustand\";\nimport toast from \"react-hot-toast\";\nimport axios from '../lib/axios.js'; // ✅ ESM requires file extension\n\nexport const useProductStore = create(set => ({\n  products: [],\n  loading: false,\n  setProducts: products => set({\n    products\n  }),\n  createProduct: async productData => {\n    set({\n      loading: true\n    });\n    try {\n      const res = await axios.post(\"/products\", productData);\n      set(prevState => ({\n        products: [...prevState.products, res.data],\n        loading: false\n      }));\n    } catch (error) {\n      toast.error(error.response.data.error);\n      set({\n        loading: false\n      });\n    }\n  },\n  fetchAllProducts: async () => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await axios.get(\"/products\");\n      set({\n        products: response.data.products,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: \"Failed to fetch products\",\n        loading: false\n      });\n      toast.error(error.response.data.error || \"Failed to fetch products\");\n    }\n  },\n  fetchProductsByCategory: async category => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await axios.get(`/products/category/${category}`);\n      set({\n        products: response.data.products,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: \"Failed to fetch products\",\n        loading: false\n      });\n      toast.error(error.response.data.error || \"Failed to fetch products\");\n    }\n  },\n  deleteProduct: async productId => {\n    set({\n      loading: true\n    });\n    try {\n      await axios.delete(`/products/${productId}`);\n      set(prevProducts => ({\n        products: prevProducts.products.filter(product => product._id !== productId),\n        loading: false\n      }));\n    } catch (error) {\n      set({\n        loading: false\n      });\n      toast.error(error.response.data.error || \"Failed to delete product\");\n    }\n  },\n  toggleFeaturedProduct: async productId => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await axios.patch(`/products/${productId}`);\n      // this will update the isFeatured prop of the product\n      set(prevProducts => ({\n        products: prevProducts.products.map(product => product._id === productId ? {\n          ...product,\n          isFeatured: response.data.isFeatured\n        } : product),\n        loading: false\n      }));\n      toast.success(\"Product updated successfully\");\n    } catch (error) {\n      set({\n        loading: false\n      });\n      toast.error(error.response.data.error || \"Failed to update product\");\n    }\n  },\n  fetchFeaturedProducts: async () => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await axios.get(\"/products/featured\");\n      console.log(\"Fetched featured products:\", response.data); // Log the fetched data\n      set({\n        products: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: \"Failed to fetch products\",\n        loading: false\n      });\n      console.log(\"Error fetching featured products:\", error);\n    }\n  }\n}));","map":{"version":3,"names":["create","toast","axios","useProductStore","set","products","loading","setProducts","createProduct","productData","res","post","prevState","data","error","response","fetchAllProducts","get","fetchProductsByCategory","category","deleteProduct","productId","delete","prevProducts","filter","product","_id","toggleFeaturedProduct","patch","map","isFeatured","success","fetchFeaturedProducts","console","log"],"sources":["C:/Users/hasit/OneDrive/Desktop/PHEEEW--E-Commerce-App-main/frontend/src/stores/useProductStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport toast from \"react-hot-toast\";\nimport axios from '../lib/axios.js'; // ✅ ESM requires file extension\n\n\nexport const useProductStore = create((set) => ({\n  products: [],\n  loading: false,\n\n  setProducts: (products) => set({ products }),\n  createProduct: async (productData) => {\n    set({ loading: true });\n    try {\n      const res = await axios.post(\"/products\", productData);\n      set((prevState) => ({\n        products: [...prevState.products, res.data],\n        loading: false,\n      }));\n    } catch (error) {\n      toast.error(error.response.data.error);\n      set({ loading: false });\n    }\n  },\n  fetchAllProducts: async () => {\n    set({ loading: true });\n    try {\n      const response = await axios.get(\"/products\");\n      set({ products: response.data.products, loading: false });\n    } catch (error) {\n      set({ error: \"Failed to fetch products\", loading: false });\n      toast.error(error.response.data.error || \"Failed to fetch products\");\n    }\n  },\n  fetchProductsByCategory: async (category) => {\n    set({ loading: true });\n    try {\n      const response = await axios.get(`/products/category/${category}`);\n      set({ products: response.data.products, loading: false });\n    } catch (error) {\n      set({ error: \"Failed to fetch products\", loading: false });\n      toast.error(error.response.data.error || \"Failed to fetch products\");\n    }\n  },\n  deleteProduct: async (productId) => {\n    set({ loading: true });\n    try {\n      await axios.delete(`/products/${productId}`);\n      set((prevProducts) => ({\n        products: prevProducts.products.filter(\n          (product) => product._id !== productId\n        ),\n        loading: false,\n      }));\n    } catch (error) {\n      set({ loading: false });\n      toast.error(error.response.data.error || \"Failed to delete product\");\n    }\n  },\n  toggleFeaturedProduct: async (productId) => {\n    set({ loading: true });\n    try {\n      const response = await axios.patch(`/products/${productId}`);\n      // this will update the isFeatured prop of the product\n      set((prevProducts) => ({\n        products: prevProducts.products.map((product) =>\n          product._id === productId\n            ? { ...product, isFeatured: response.data.isFeatured }\n            : product\n        ),\n        loading: false,\n      }));\n      toast.success(\"Product updated successfully\");\n    } catch (error) {\n      set({ loading: false });\n      toast.error(error.response.data.error || \"Failed to update product\");\n    }\n  },\n\n  fetchFeaturedProducts: async () => {\n    set({ loading: true });\n    try {\n      const response = await axios.get(\"/products/featured\");\n      console.log(\"Fetched featured products:\", response.data); // Log the fetched data\n      set({ products: response.data, loading: false });\n    } catch (error) {\n      set({ error: \"Failed to fetch products\", loading: false });\n      console.log(\"Error fetching featured products:\", error);\n    }\n  },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}